# This is a basic workflow that is manually triggered

name: Docker multiarch build postfix, dovecot, fetchmail, mailfilter

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.

env:
  TEST_POSTFIX: postfix:test
  TEST_DOVECOT: dovecot:test
  TEST_FETCHMAIL: fetchmail:test
  TEST_MAILFILTER: mailfilter:test

jobs:

  build-postfix:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Get Postfix version used in image tags
        run: |
          docker build -t $TEST_POSTFIX -f Dockerfile .
          VERSION=$(docker run $TEST_POSTFIX postconf mail_version | sed 's/mail_version = //')
          image_name=ghcr.io/${{ github.repository_owner }}/postfix
          echo "tags=${image_name}:${VERSION},${image_name}:latest" >> ${GITHUB_ENV}
          echo "VERSION=${VERSION}" >> ${GITHUB_ENV}
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: ghcr.io/${{ github.repository_owner }}/postfix:${{ env.VERSION }}
        run: echo "${{ env.tags }}"
      
      - name: Build and push postfix ${{ env.VERSION }}
        uses: docker/build-push-action@v3
        with:
          push: true
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          tags: ${{ env.tags }}

  build-dovecot:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Get dovecot version used in image tags
        run: |
          docker build -t $TEST_DOVECOT -f Dockerfile-dovecot .
          DOVECOT_VERSION=$(docker run $TEST_DOVECOT /usr/sbin/dovecot --version | sed 's/ .*//')
          dovecot_image=ghcr.io/${{ github.repository_owner }}/dovecot
          echo "dovecot_tags=${dovecot_image}:${DOVECOT_VERSION},${dovecot_image}:latest" >> ${GITHUB_ENV}
          echo "DOVECOT_VERSION=${DOVECOT_VERSION}" >> ${GITHUB_ENV}
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: ghcr.io/${{ github.repository_owner }}/dovecot:${{ env.DOVECOT_VERSION }}
        run: echo "${{ env.dovecot_tags }}"
      
      - name: Build and push dovecot ${{ env.DOVECOT_VERSION }}
        uses: docker/build-push-action@v3
        with:
          push: true
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          tags: ${{ env.dovecot_tags }}
          file: Dockerfile-dovecot

  build-fetchmail:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Get fetchmail version used in image tags
        run: |
          docker build -t $TEST_FETCHMAIL -f Dockerfile-fetchmail .
          
          FETCHMAIL_VERSION=$(docker run $TEST_FETCHMAIL fetchmail --version | \
            grep "This is fetchmail release" | \
            sed "s/This is fetchmail release \([0-9]\.[0-9]\.[0-9]*\).*/\1/")
          
          fetchmail_image=ghcr.io/${{ github.repository_owner }}/fetchmail
          echo "fetchmail_tags=${fetchmail_image}:${FETCHMAIL_VERSION},${fetchmail_image}:latest" >> ${GITHUB_ENV}
          echo "FETCHMAIL_VERSION=${FETCHMAIL_VERSION}" >> ${GITHUB_ENV}
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: ghcr.io/${{ github.repository_owner }}/fetchmail:${{ env.FETCHMAIL_VERSION }}
        run: echo "${{ env.fetchmail_tags }}"
      
      - name: Build and push fetchmail ${{ env.FETCHMAIL_VERSION }}
        uses: docker/build-push-action@v3
        with:
          push: true
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          tags: ${{ env.fetchmail_tags }}
          file: Dockerfile-fetchmail

  build-mailfilter:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: nondeterministic/mailfilter
          path: mailfilter

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Get mailfilter version used in image tags
        run: |
          docker build -t $TEST_MAILFILTER -f Dockerfile-mailfilter .
          
          MAILFILTER_VERSION=$(docker run $TEST_MAILFILTER mailfilter --version | \
            sed -n -e "/^mailfilter/ s/mailfilter //p")
          
          mailfilter_image=ghcr.io/${{ github.repository_owner }}/mailfilter
          echo "mailfilter_tags=${mailfilter_image}:${MAILFILTER_VERSION},${mailfilter_image}:latest" >> ${GITHUB_ENV}
          echo "MAILFILTER_VERSION=${MAILFILTER_VERSION}" >> ${GITHUB_ENV}
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: ghcr.io/${{ github.repository_owner }}/mailfilter:${{ env.MAILFILTER_VERSION }}
        run: echo "${{ env.mailfilter_tags }}"
      
      - name: Build and push mailfilter ${{ env.MAILFILTER_VERSION }}
        uses: docker/build-push-action@v3
        with:
          push: true
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          tags: ${{ env.mailfilter_tags }}
          file: Dockerfile-mailfilter
          context: .
